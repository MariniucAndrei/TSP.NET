//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAPI")]
public interface IAPI
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Create", ReplyAction="http://tempuri.org/InterfaceAPI/CreateResponse")]
    void Create(string table, string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Create", ReplyAction="http://tempuri.org/InterfaceAPI/CreateResponse")]
    System.Threading.Tasks.Task CreateAsync(string table, string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/CreateNew", ReplyAction="http://tempuri.org/InterfaceAPI/CreateNewResponse")]
    void CreateNew(string table, string name, string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/CreateNew", ReplyAction="http://tempuri.org/InterfaceAPI/CreateNewResponse")]
    System.Threading.Tasks.Task CreateNewAsync(string table, string name, string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Read", ReplyAction="http://tempuri.org/InterfaceAPI/ReadResponse")]
    string Read(string table);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Read", ReplyAction="http://tempuri.org/InterfaceAPI/ReadResponse")]
    System.Threading.Tasks.Task<string> ReadAsync(string table);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Update", ReplyAction="http://tempuri.org/InterfaceAPI/UpdateResponse")]
    void Update(string name, string NewName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Update", ReplyAction="http://tempuri.org/InterfaceAPI/UpdateResponse")]
    System.Threading.Tasks.Task UpdateAsync(string name, string NewName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Delete", ReplyAction="http://tempuri.org/InterfaceAPI/DeleteResponse")]
    void Delete(string table, string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Delete", ReplyAction="http://tempuri.org/InterfaceAPI/DeleteResponse")]
    System.Threading.Tasks.Task DeleteAsync(string table, string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Search", ReplyAction="http://tempuri.org/InterfaceAPI/SearchResponse")]
    string Search(string table, string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Search", ReplyAction="http://tempuri.org/InterfaceAPI/SearchResponse")]
    System.Threading.Tasks.Task<string> SearchAsync(string table, string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Filter", ReplyAction="http://tempuri.org/InterfaceAPI/FilterResponse")]
    string Filter(string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Filter", ReplyAction="http://tempuri.org/InterfaceAPI/FilterResponse")]
    System.Threading.Tasks.Task<string> FilterAsync(string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Save", ReplyAction="http://tempuri.org/InterfaceAPI/SaveResponse")]
    void Save();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceAPI/Save", ReplyAction="http://tempuri.org/InterfaceAPI/SaveResponse")]
    System.Threading.Tasks.Task SaveAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAPIChannel : IAPI, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class APIClient : System.ServiceModel.ClientBase<IAPI>, IAPI
{
    
    public APIClient()
    {
    }
    
    public APIClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public APIClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public APIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public APIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void Create(string table, string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent)
    {
        base.Channel.Create(table, name, date, path, isDeleted, idZone, idGroup, idEvent);
    }
    
    public System.Threading.Tasks.Task CreateAsync(string table, string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent)
    {
        return base.Channel.CreateAsync(table, name, date, path, isDeleted, idZone, idGroup, idEvent);
    }
    
    public void CreateNew(string table, string name, string id)
    {
        base.Channel.CreateNew(table, name, id);
    }
    
    public System.Threading.Tasks.Task CreateNewAsync(string table, string name, string id)
    {
        return base.Channel.CreateNewAsync(table, name, id);
    }
    
    public string Read(string table)
    {
        return base.Channel.Read(table);
    }
    
    public System.Threading.Tasks.Task<string> ReadAsync(string table)
    {
        return base.Channel.ReadAsync(table);
    }
    
    public void Update(string name, string NewName)
    {
        base.Channel.Update(name, NewName);
    }
    
    public System.Threading.Tasks.Task UpdateAsync(string name, string NewName)
    {
        return base.Channel.UpdateAsync(name, NewName);
    }
    
    public void Delete(string table, string name)
    {
        base.Channel.Delete(table, name);
    }
    
    public System.Threading.Tasks.Task DeleteAsync(string table, string name)
    {
        return base.Channel.DeleteAsync(table, name);
    }
    
    public string Search(string table, string name)
    {
        return base.Channel.Search(table, name);
    }
    
    public System.Threading.Tasks.Task<string> SearchAsync(string table, string name)
    {
        return base.Channel.SearchAsync(table, name);
    }
    
    public string Filter(string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent)
    {
        return base.Channel.Filter(name, date, path, isDeleted, idZone, idGroup, idEvent);
    }
    
    public System.Threading.Tasks.Task<string> FilterAsync(string name, string date, string path, string isDeleted, int idZone, int idGroup, int idEvent)
    {
        return base.Channel.FilterAsync(name, date, path, isDeleted, idZone, idGroup, idEvent);
    }
    
    public void Save()
    {
        base.Channel.Save();
    }
    
    public System.Threading.Tasks.Task SaveAsync()
    {
        return base.Channel.SaveAsync();
    }
}
